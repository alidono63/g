{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\g\\\\src\\\\upcoming.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Upcoming = () => {\n  _s();\n  const [movies, setMovies] = useState([]);\n  useEffect(() => {\n    fetch('http://localhost:8000/movieLibrary').then(res => {\n      console.log('response status:', res.status);\n      if (!res.ok) {\n        throw new Error(\"Network response was not ok\");\n      }\n      return res.json(); // Fixed: `return res json();` should be `return res.json();`\n    }).then(data => {\n      console.log(\"Fetched data:\", data);\n      if (data && data.categories && data.categories.upcoming) {\n        console.log(\"Upcoming Movies:\", data.categories.upcoming);\n        setMovies(data.categories.upcoming);\n      } else {\n        console.error(\"No upcoming movies found\");\n      }\n    }).catch(error => {\n      console.error(\"Failed to fetch movies:\", error); // Fixed: `.catch error =>` should be `.catch(error =>`\n    });\n  }, []); // Fixed: The dependency array should be `[]`\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"movies-upcoming\",\n    children: movies.length > 0 ? movies.map(movie => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"movie-preview\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: movie.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: movie.posterUrl,\n        alt: movie.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Rating: \", movie.rating ? movie.rating : \"Not yet rated\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Release Date: \", movie.releaseDate]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 25\n      }, this)]\n    }, movie.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 21\n    }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No movies available or loading failed.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }, this);\n};\n_s(Upcoming, \"MO6b3PSP3RIUqZ8gtSrBZBVtBbs=\");\n_c = Upcoming;\nvar _c;\n$RefreshReg$(_c, \"Upcoming\");","map":{"version":3,"names":["useEffect","useState","jsxDEV","_jsxDEV","Upcoming","_s","movies","setMovies","fetch","then","res","console","log","status","ok","Error","json","data","categories","upcoming","error","catch","className","children","length","map","movie","title","fileName","_jsxFileName","lineNumber","columnNumber","src","posterUrl","alt","rating","releaseDate","id","_c","$RefreshReg$"],"sources":["C:/Users/user/g/src/upcoming.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\n\r\nexport const Upcoming = () => {\r\n    const [movies, setMovies] = useState([]);\r\n\r\n    useEffect(() => {\r\n        fetch('http://localhost:8000/movieLibrary')\r\n       \r\n            .then(res => {\r\n                console.log('response status:', res.status);\r\n                if (!res.ok) {\r\n                    throw new Error(\"Network response was not ok\");\r\n                }\r\n                return res.json(); // Fixed: `return res json();` should be `return res.json();`\r\n            })\r\n            .then(data => {\r\n                console.log(\"Fetched data:\", data);\r\n                if (data && data.categories && data.categories.upcoming) {\r\n                    console.log(\"Upcoming Movies:\", data.categories.upcoming);\r\n                    setMovies(data.categories.upcoming);\r\n                } else {\r\n                    console.error(\"No upcoming movies found\");\r\n                }\r\n            })\r\n            .catch(error => {\r\n                console.error(\"Failed to fetch movies:\", error); // Fixed: `.catch error =>` should be `.catch(error =>`\r\n            });\r\n    }, []); // Fixed: The dependency array should be `[]`\r\n\r\n    return (\r\n        <div className=\"movies-upcoming\">\r\n            {movies.length > 0 ? (\r\n                movies.map((movie) => (\r\n                    <div className=\"movie-preview\" key={movie.id}>\r\n                        <h2>{movie.title}</h2>\r\n                        <img src={movie.posterUrl} alt={movie.title} />\r\n                        <p>Rating: {movie.rating ? movie.rating : \"Not yet rated\"}</p>\r\n                        <p>Release Date: {movie.releaseDate}</p>\r\n                    </div>\r\n                ))\r\n            ) : (\r\n                <p>No movies available or loading failed.</p>\r\n            )}\r\n        </div>\r\n    );\r\n};"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5C,OAAO,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAExCD,SAAS,CAAC,MAAM;IACZQ,KAAK,CAAC,oCAAoC,CAAC,CAEtCC,IAAI,CAACC,GAAG,IAAI;MACTC,OAAO,CAACC,GAAG,CAAC,kBAAkB,EAAEF,GAAG,CAACG,MAAM,CAAC;MAC3C,IAAI,CAACH,GAAG,CAACI,EAAE,EAAE;QACT,MAAM,IAAIC,KAAK,CAAC,6BAA6B,CAAC;MAClD;MACA,OAAOL,GAAG,CAACM,IAAI,CAAC,CAAC,CAAC,CAAC;IACvB,CAAC,CAAC,CACDP,IAAI,CAACQ,IAAI,IAAI;MACVN,OAAO,CAACC,GAAG,CAAC,eAAe,EAAEK,IAAI,CAAC;MAClC,IAAIA,IAAI,IAAIA,IAAI,CAACC,UAAU,IAAID,IAAI,CAACC,UAAU,CAACC,QAAQ,EAAE;QACrDR,OAAO,CAACC,GAAG,CAAC,kBAAkB,EAAEK,IAAI,CAACC,UAAU,CAACC,QAAQ,CAAC;QACzDZ,SAAS,CAACU,IAAI,CAACC,UAAU,CAACC,QAAQ,CAAC;MACvC,CAAC,MAAM;QACHR,OAAO,CAACS,KAAK,CAAC,0BAA0B,CAAC;MAC7C;IACJ,CAAC,CAAC,CACDC,KAAK,CAACD,KAAK,IAAI;MACZT,OAAO,CAACS,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC,CAAC,CAAC;IACrD,CAAC,CAAC;EACV,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;EAER,oBACIjB,OAAA;IAAKmB,SAAS,EAAC,iBAAiB;IAAAC,QAAA,EAC3BjB,MAAM,CAACkB,MAAM,GAAG,CAAC,GACdlB,MAAM,CAACmB,GAAG,CAAEC,KAAK,iBACbvB,OAAA;MAAKmB,SAAS,EAAC,eAAe;MAAAC,QAAA,gBAC1BpB,OAAA;QAAAoB,QAAA,EAAKG,KAAK,CAACC;MAAK;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACtB5B,OAAA;QAAK6B,GAAG,EAAEN,KAAK,CAACO,SAAU;QAACC,GAAG,EAAER,KAAK,CAACC;MAAM;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAC/C5B,OAAA;QAAAoB,QAAA,GAAG,UAAQ,EAACG,KAAK,CAACS,MAAM,GAAGT,KAAK,CAACS,MAAM,GAAG,eAAe;MAAA;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC9D5B,OAAA;QAAAoB,QAAA,GAAG,gBAAc,EAACG,KAAK,CAACU,WAAW;MAAA;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC;IAAA,GAJRL,KAAK,CAACW,EAAE;MAAAT,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAKvC,CACR,CAAC,gBAEF5B,OAAA;MAAAoB,QAAA,EAAG;IAAsC;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG;EAC/C;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEd,CAAC;AAAC1B,EAAA,CA3CWD,QAAQ;AAAAkC,EAAA,GAARlC,QAAQ;AAAA,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}