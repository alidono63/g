{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\g\\\\src\\\\topRated.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const TopRated = () => {\n  _s();\n  const [movies, setMovies] = useState([]);\n  useEffect(() => {\n    fetch('http://localhost:8000/movieLibrary').then(res => res.json()).then(data => {\n      console.log(data);\n      // Assuming you want to display movies from the 'popular' category\n      if (data && data.categories && data.categories.topRated) {\n        setMovies(data.categories.topRated);\n      } else {\n        console.error(\"No top Rated movies found\");\n      }\n    }).catch(error => {\n      console.error(\"Failed to fetch movies:\", error);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"movies\",\n    children: movies.length > 0 ? movies.map(movie => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"movie-preview\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: movie.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 41\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: movie.posterUrl,\n        alt: movie.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 41\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Rating: \", movie.rating ? movie.rating : \"Not yet rated\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 41\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Release Date: \", movie.releaseDate]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 41\n      }, this)]\n    }, movie.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 37\n    }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No movies available or loading failed.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 33\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 25\n  }, this);\n};\n_s(TopRated, \"MO6b3PSP3RIUqZ8gtSrBZBVtBbs=\");\n_c = TopRated;\nvar _c;\n$RefreshReg$(_c, \"TopRated\");","map":{"version":3,"names":["useState","useEffect","jsxDEV","_jsxDEV","TopRated","_s","movies","setMovies","fetch","then","res","json","data","console","log","categories","topRated","error","catch","className","children","length","map","movie","title","fileName","_jsxFileName","lineNumber","columnNumber","src","posterUrl","alt","rating","releaseDate","id","_c","$RefreshReg$"],"sources":["C:/Users/user/g/src/topRated.js"],"sourcesContent":["import { useState,useEffect } from \"react\";\r\nexport const TopRated =() =>{\r\n const [movies, setMovies] = useState([]);\r\n                    useEffect(() => {\r\n                        fetch('http://localhost:8000/movieLibrary')\r\n                            .then(res => res.json())\r\n                            .then(data => {\r\n                                console.log(data);\r\n                                // Assuming you want to display movies from the 'popular' category\r\n                                if (data && data.categories && data.categories.topRated) {\r\n                                    setMovies(data.categories.topRated);\r\n                                } else {\r\n                                    console.error(\"No top Rated movies found\");\r\n                                }\r\n                            })\r\n                            .catch(error => {\r\n                                console.error(\"Failed to fetch movies:\", error);\r\n                            });\r\n                    }, []);\r\n                    return (\r\n                        <div className=\"movies\">\r\n                            {movies.length > 0 ? (\r\n                                movies.map((movie) => (\r\n                                    <div className=\"movie-preview\" key={movie.id}>\r\n                                        <h2>{movie.title}</h2>\r\n                                        <img src={movie.posterUrl} alt={movie.title} />\r\n                                        <p>Rating: {movie.rating ? movie.rating : \"Not yet rated\"}</p>\r\n                                        <p>Release Date: {movie.releaseDate}</p>\r\n                                    </div>\r\n                                ))\r\n                            ) : (\r\n                                <p>No movies available or loading failed.</p>\r\n                            )}\r\n                        </div>\r\n                    );\r\n                };\r\n  "],"mappings":";;AAAA,SAASA,QAAQ,EAACC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAC3C,OAAO,MAAMC,QAAQ,GAAEA,CAAA,KAAK;EAAAC,EAAA;EAC3B,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EACrBC,SAAS,CAAC,MAAM;IACZO,KAAK,CAAC,oCAAoC,CAAC,CACtCC,IAAI,CAACC,GAAG,IAAIA,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC,CACvBF,IAAI,CAACG,IAAI,IAAI;MACVC,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC;MACjB;MACA,IAAIA,IAAI,IAAIA,IAAI,CAACG,UAAU,IAAIH,IAAI,CAACG,UAAU,CAACC,QAAQ,EAAE;QACrDT,SAAS,CAACK,IAAI,CAACG,UAAU,CAACC,QAAQ,CAAC;MACvC,CAAC,MAAM;QACHH,OAAO,CAACI,KAAK,CAAC,2BAA2B,CAAC;MAC9C;IACJ,CAAC,CAAC,CACDC,KAAK,CAACD,KAAK,IAAI;MACZJ,OAAO,CAACI,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;IACnD,CAAC,CAAC;EACV,CAAC,EAAE,EAAE,CAAC;EACN,oBACId,OAAA;IAAKgB,SAAS,EAAC,QAAQ;IAAAC,QAAA,EAClBd,MAAM,CAACe,MAAM,GAAG,CAAC,GACdf,MAAM,CAACgB,GAAG,CAAEC,KAAK,iBACbpB,OAAA;MAAKgB,SAAS,EAAC,eAAe;MAAAC,QAAA,gBAC1BjB,OAAA;QAAAiB,QAAA,EAAKG,KAAK,CAACC;MAAK;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACtBzB,OAAA;QAAK0B,GAAG,EAAEN,KAAK,CAACO,SAAU;QAACC,GAAG,EAAER,KAAK,CAACC;MAAM;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAC/CzB,OAAA;QAAAiB,QAAA,GAAG,UAAQ,EAACG,KAAK,CAACS,MAAM,GAAGT,KAAK,CAACS,MAAM,GAAG,eAAe;MAAA;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC9DzB,OAAA;QAAAiB,QAAA,GAAG,gBAAc,EAACG,KAAK,CAACU,WAAW;MAAA;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC;IAAA,GAJRL,KAAK,CAACW,EAAE;MAAAT,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAKvC,CACR,CAAC,gBAEFzB,OAAA;MAAAiB,QAAA,EAAG;IAAsC;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG;EAC/C;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEd,CAAC;AAACvB,EAAA,CAlCLD,QAAQ;AAAA+B,EAAA,GAAR/B,QAAQ;AAAA,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}